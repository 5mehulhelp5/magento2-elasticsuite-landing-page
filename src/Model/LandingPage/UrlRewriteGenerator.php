<?php

declare(strict_types=1);

namespace Actiview\ElasticsuiteLandingPages\Model\LandingPage;

use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Actiview\ElasticsuiteLandingPages\Api\Data\LandingPageInterface;
use Actiview\ElasticsuiteLandingPages\Controller\LandingPage\View;
use Magento\Store\Model\StoreManagerInterface;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory;

class UrlRewriteGenerator
{
    /**
     * Entity type code
     */
    public const ENTITY_TYPE = 'landingpage';

    public function __construct(
        private UrlRewriteFactory $urlRewriteFactory,
        private StoreManagerInterface $storeManager,
    ) {}

    public function generate(LandingPageInterface $landingPage): array
    {
        $stores = $landingPage->getStoreId();
        $urls = array_search('0', $stores) === false
            ? $this->generateForSpecificStores($landingPage, $stores)
            : $this->generateForAllStores($landingPage);

        return $urls;
    }

    /**
     * @return UrlRewrite[]
     */
    protected function generateForAllStores(LandingPageInterface $landingPage): array
    {
        $urls = [];
        foreach ($this->storeManager->getStores() as $store) {
            $urls[] = $this->createUrlRewrite($landingPage, (int) $store->getId());
        }
        return $urls;
    }

    /**
     * @param int[] $storeIds
     * @return UrlRewrite[]
     */
    private function generateForSpecificStores(LandingPageInterface $landingPage, array $storeIds): array
    {
        $urls = [];
        $existingStores = $this->storeManager->getStores();
        foreach ($storeIds as $storeId) {
            if (!isset($existingStores[$storeId])) {
                continue;
            }
            $urls[] = $this->createUrlRewrite($landingPage, (int) $storeId);
        }

        return $urls;
    }

    private function createUrlRewrite(
        LandingPageInterface $landingPage,
        int $storeId,
        int $redirectType = 0
    ): UrlRewrite {
        return $this->urlRewriteFactory->create()
            ->setStoreId($storeId)
            ->setEntityType(self::ENTITY_TYPE)
            ->setEntityId($landingPage->getId())
            ->setRequestPath($landingPage->getUrlKey())
            ->setTargetPath(View::getUrlPath($landingPage))
            ->setIsAutogenerated(1)
            ->setRedirectType($redirectType)
        ;
    }
}
